plugins {
    alias(libs.plugins.android.application)
}

android {
    namespace 'com.ssmalllucky.android.corekit'
    compileSdk 34

    defaultConfig {
        applicationId "com.ssmalllucky.android.corekit"
        minSdk 24
        targetSdk 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

task updateMarkdown {
    doLast {
//        def gitLog = 'git log -1 --pretty=format:"%h - %an, %ar : %s"'.execute().text.trim()
        def gitLog = 'git log -1 --pretty=format:"%s"'.execute().text.trim()
        def markdownFile = file("${project.rootDir}/CHANGELOG.md")

        // 读取现有的文件内容
        def currentContent = markdownFile.text
        // 将新的提交记录追加到文件末尾
        def newContent = currentContent + "\n\n## Latest Commit\n" + gitLog
        markdownFile.write(newContent)
    }
}

// 在 assembleDebug 任务前执行 updateMarkdown 任务
preBuild.dependsOn updateMarkdown


dependencies {

    implementation libs.appcompat
    implementation libs.material
    implementation project(':corekit')
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
}